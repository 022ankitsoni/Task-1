1) Weird Letter-
#include<bits/stdc++.h>

using namespace std;

#pragma GCC optimize("Ofast,no-stack-protector")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")

/// Typedef
typedef long long ll;

#define sc1(a) scanf("%lld",&a)
#define sc2(a,b) scanf("%lld %lld",&a,&b)

#define pf1(a) printf("%lld\n",a)
#define pf2(a,b) printf("%lld %lld\n",a,b)

#define mx 100007
#define mod 100000007
#define PI acos(-1.0)

#define size1 12
#define pb push_back


int main()
{

    ll k, prime, m, tc, num, t = 4;

    sc1(tc);

    while (tc--){
        string arr, brr;
        cin >> arr >> brr;

        vector <pair<char, ll> > s, t;

        ll cnt = 1;
        for(ll i = 0; i < arr.size(); i++){
            if(arr[i] == arr[i + 1]) cnt++;
            else{
                s.push_back(make_pair(arr[i], cnt));
                cnt = 1;
            }
        }

        cnt = 1;
        for(ll i = 0; i < brr.size(); i++){
            if(brr[i] == brr[i + 1]) cnt++;
            else{
                t.push_back(make_pair(brr[i], cnt));
                cnt = 1;
            }
        }

        if(s.size() != t.size()){
            cout << "NO" << endl;
            continue;
        }

        bool ck = true;
        for(ll i = 0; i < s.size(); i++){
            if(s[i].first == t[i].first && s[i].second <= t[i].second) continue;
            else {
                cout << "NO" << endl;
                ck = false;
                break;
            }
        }

        if(ck == true) cout << "YES" << endl;
    }
}

2) 
#include <cmath>
#include <cstdio>
#include <vector>
#include <string>
#include <iostream>
#include <algorithm>
using namespace std;
int z=0;
int total = 0;

int add(int a , int b)
{
    return (a+b);
}

int substract(int a, int b)
{
    return (a-b);
}

int mult(int a, int b)
{
    return (a * b);
}

int divide(int a, int b)
{
    if(b != 0)
        return (a/b);
    else
        return 0;  
}

void Perform(int* result, int first, int second, int index, int target)
{
    if(target == first && index == total)//-1)
    {
        z = 1;
        return;
    }
    if(index >= total  || z == -1)
        return;
    if(z==0)// && index != total-1)
    {
        Perform(result, add(first, second), (index+1 >= total)?0:result[index+1], index+1, target);
        Perform(result, substract(first, second), (index+1 >= total)?0:result[index+1], index+1, target);
        if(second != 0)
            Perform(result, mult(first, second), (index+1 >= total)?0:result[index+1], index+1, target);
        if(second != 0)
            Perform(result, divide(first, second), (index+1 >= total)?0:result[index+1], index+1, target);
    }
}


int main()
{
   int t,i;
   int n,k,j;
   vector<string> result;
   cin>>t;
   string test[t];
   for(i=0;i<t;i++)
   {
       z= 0;
      cin>>n>>k;
      int a[n];
      for(j=0;j<n;j++)
      {
          cin>>a[j];
        total = n;
        Perform(a, a[0], a[1], 1, k);
    
        if(z==0 || z == -1)
        {
            test[i]="NO";
        }
        else
            test[i]="YES";
      }
   }
   for(i=0;i<t;i++)
   {
       cout<<test[i]<<endl;
   }
   return 0;
}

3) Catch the Psycopath-
#include <cmath>
#include <cstdio>
#include <vector>
#include <string>
#include <iostream>
#include <algorithm>
using namespace std;
int j,p[1000];
void dfs(int* a,int i,int s,int n,int k)
{
    if(i>=n || a[i]== -1)
    {
       return;
    }
    p[k++]=a[i];
    if((2*i+1>=n || a[2*i+1]== -1) && (2*i+2>=n || a[2*i+2]== -1)&& s==a[i])
    {
        for(j=0;j<k;j++)
            cout<<p[j]<<" ";
        cout<<endl;
           // for(j=0;j<k;j++)
           // p[j]=0;
         //  p[j-1]=0; 
    }
    
    
    dfs(a,2*i+1,s-a[i],n,k);
    dfs(a,2*i+2,s-a[i],n,k);
    k--;
}
int main()
{
    int n,i,m;
    cin>>n;
    int a[n];
    for(i=0;i<n;i++)
    {
        cin>>a[i];
    }
    cin>>m;
    dfs(a,0,m,n,0);
    return 0;
}

4) Fractalato-
#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   
     unsigned long long int n,u,up=1,down=0;
    cin>>n;
    if(n==0)
       cout<<"1";
   
    else{
        while(n--)
        {
            u=up;
            up=(up*3+down)%1000000007;
            down=(down*3+u)%1000000007;
        }
  cout<<up;
    }  
    
    return 0;
}
